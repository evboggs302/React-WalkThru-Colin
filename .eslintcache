[{"/Users/evanboggs/Documents/Code/React-Apps/react-walkthru-colin/src/index.js":"1","/Users/evanboggs/Documents/Code/React-Apps/react-walkthru-colin/src/App.js":"2","/Users/evanboggs/Documents/Code/React-Apps/react-walkthru-colin/src/reportWebVitals.js":"3","/Users/evanboggs/Documents/Code/React-Apps/react-walkthru-colin/src/Comps/State_Tracker.js":"4","/Users/evanboggs/Documents/Code/React-Apps/react-walkthru-colin/src/Comps/ItemCard.js":"5"},{"size":500,"mtime":1612019555009,"results":"6","hashOfConfig":"7"},{"size":258,"mtime":1612483541211,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1612019555013,"results":"9","hashOfConfig":"7"},{"size":2559,"mtime":1612484404963,"results":"10","hashOfConfig":"7"},{"size":2267,"mtime":1612483332090,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"wp3sf1",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/evanboggs/Documents/Code/React-Apps/react-walkthru-colin/src/index.js",[],["24","25"],"/Users/evanboggs/Documents/Code/React-Apps/react-walkthru-colin/src/App.js",[],"/Users/evanboggs/Documents/Code/React-Apps/react-walkthru-colin/src/reportWebVitals.js",[],"/Users/evanboggs/Documents/Code/React-Apps/react-walkthru-colin/src/Comps/State_Tracker.js",["26","27","28","29"],"/Users/evanboggs/Documents/Code/React-Apps/react-walkthru-colin/src/Comps/ItemCard.js",["30"],"import React, { useEffect, useState, useCallback, memo } from \"react\";\n\n/*\nThis is not the best use of the useEffect hook as you'll see needless rerenders.\n\n#1 RULE --> Hooks (esp useEffect) should only be used the at top-level.\n        --> this component is small and rendered multiple times in a map which makes it a poor candidate for UseEffect.\n\n*/\n\n///////////////////////////////////////////////////////////////\n/*\n\nThe real benefits of Functional components come when trying to optimize performance. The useCallback\nhook, React.memo(()=>{render}, ()=>{prop comparison}) structure, useMemo hook, and lazy/Suspense\nhooks provide a TON of added functionality and specificity.\n\n*/\n///////////////////////////////////////////////////////////////\n\n// export default function ItemCard(props) {\nexport default memo(\n  function ItemCard(props) {\n    const { name, index, deleteFunc, updateFunc } = props;\n    console.log(\"ItemCard \", name.toUpperCase(), \" rendered\");\n    const [bool, changeBool] = useState(false);\n    const [itemVal, updateItem] = useState(name);\n    // const deleteMe = () => deleteFunc(index); // added in-line below\n    const editVal = useCallback(() => changeBool(!bool), [bool]);\n    const saveVal = (val, index) => async (val, index) => {\n      await updateFunc(itemVal, index);\n      changeBool(false);\n    };\n\n    // USEEFFECT STRUCTURE\n    // useEffect(() => {}, []);\n\n    return (\n      <li>\n        {bool ? (\n          <input\n            type=\"text\"\n            value={itemVal}\n            onChange={(e) => updateItem(e.target.value)}\n          />\n        ) : (\n          <div>{name}</div>\n        )}\n        <button\n          onClick={useCallback(() => deleteFunc(index), [deleteFunc, index])}>\n          Delete Item\n        </button>\n        {bool ? (\n          <button onClick={saveVal}>Save</button>\n        ) : (\n          <button onClick={editVal}>Edit Item</button>\n        )}\n      </li>\n    );\n    // }\n  },\n  (oldProps, newProps) => {\n    console.log(\n      \"prop comparison fired. \\n old: \",\n      oldProps,\n      \"\\n new: \",\n      newProps\n    );\n    // console.log(oldProps.list.indexOf(newProps.name) + 1);\n    return (\n      oldProps.list.includes(oldProps.name) &&\n      newProps.list.includes(newProps.name)\n    );\n  }\n);\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":17,"nodeType":"37","messageId":"38","endLine":1,"endColumn":26},{"ruleId":"35","severity":1,"message":"39","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":16},{"ruleId":"35","severity":1,"message":"40","line":71,"column":13,"nodeType":"37","messageId":"38","endLine":71,"endColumn":17},{"ruleId":"35","severity":1,"message":"41","line":71,"column":19,"nodeType":"37","messageId":"38","endLine":71,"endColumn":23},{"ruleId":"35","severity":1,"message":"42","line":1,"column":17,"nodeType":"37","messageId":"38","endLine":1,"endColumn":26},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'ItemCard' is defined but never used.","'item' is assigned a value but never used.","'list' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]